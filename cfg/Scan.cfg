#! /usr/bin/env python

PACKAGE='wfi_from_depth_sensor'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# ROI parameters
# Maximums are arbitrary set to the resolution of a 5Mp Prosilica, since we can't set
# the dynamically.
gen.add("h_x_offset", int_t, 0, "Horizontal X offset of the region of interest", 0, 0, 2001)
gen.add("h_y_offset", int_t, 0, "Horizontal Y offset of the region of interest", 0, 0, 2002)
gen.add("h_width", int_t, 0, "Horizontal width of the region of interest", 0, 0, 2003)
gen.add("h_height", int_t, 0, "Horizontal height of the region of interest", 0, 0, 2004)

gen.add("v_x_offset", int_t, 0, "Vertical X offset of the region of interest", 0, 0, 2005)
gen.add("v_y_offset", int_t, 0, "Vertical Y offset of the region of interest", 0, 0, 2008)
gen.add("v_width", int_t, 0, "Vertical width of the region of interest", 0, 0, 2009)
gen.add("v_height", int_t, 0, "Vertical height of the region of interest", 0, 0, 2010)

gen.add("scan_height", int_t, 0, "The number of pixel rows to use to generate the laserscan", 1, 0, 1001)
gen.add("scan_time", double_t, 0, "Time between scans (seconds)", 0.033, 0, 1002)
gen.add("range_min", double_t, 0, "The minimum ranges to return in meters", 0.45, 0, 1003)
gen.add("range_max", double_t, 0, "The maximum ranges to return in meters", 10, 0, 1004)
gen.add("output_frame_id", str_t, 0, "The frame id of the laser scan", "camera_depth_frame")

# First string value is node name, used only for generating documentation
# Second string value ("Scan") is name of class and generated
#    .h file, with "Config" added, so class ScanConfig
exit(gen.generate(PACKAGE, "wfi_from_depth_sensor", "Scan"))
